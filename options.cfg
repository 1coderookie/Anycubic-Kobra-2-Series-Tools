#------------------------------------------------------------------------------------------------
# 'options.cfg' is the default configuration file used by 'patch.sh'
# You can provide another configuration file as a parameter to 'patch.sh'
# All available patching options are listed below
# Disable patching an option by using '#' or ';' as a first character in the option line
# Use single or double quotes for the option value. Do not use spaces inside the quotes.
# Use list of values separated by a space if needed because duplicated option are not supported
# In square brackets you may place the name(s) of other option(s) required by a given option.
# This will not auto include the required option(s) but will be used to validate the option integrity.
#-------------------------------------------------------------------------------------------------

# Enable the custom updates by using the provided public key
# When enabled, the new custom update will allow next custom updates to be directly done by USB update
# @ will be replaced by the working folder root
# Use the provided example of public and private keys or generate your own:
# Use 'openssl genrsa -out swupdate_private.pem' to generate a private key
# Use 'openssl rsa -in swupdate_private.pem -out swupdate_public.pem -outform PEM -pubout' to export the public key
# Place both keys (swupdate_private.pem and swupdate_public.pem) in the folder RESOURCES/KEYS
custom_update="@/RESOURCES/KEYS/swupdate_public.pem"

# Enable root access by providing a custom root password hash (default password 'toor')
# Providing an empty string will allow root access without a password (not recommended)
# If disabled, you will have no root access until you find out what is the AC original root password
root_access="$1$///xTLYF$krWXTe62/dm.crd6CH4HW0"

# Enable the UART at boot for access the uboot shell and for root login
# UART access is needed for backup/restore and for root login when you don't have ssh
# Use uboot from version '2.3.9' (recommended)
# From version 3.0.3 the UART is disabled
uart="2.3.9"

# Enable the SSH server, use 'dropbear' type ssh (recommended)
#ssh="dropbear"

# Enable opkg (+5MB to the update, +10MB to the rootfs)
# Use it only when you plan to install more packages from the printer
opkg="default"

# Enable Python 3 (+14MB to the update, +25MB to the rootfs)
# Select the version you need. Python might be required by some other options
python="3.11"

# Webcam cli tool for taking pictures from a connected USB web camera
fswebcam="default"

# Enable custom web camera support. Use the 'default' package.
# Support for firmware ver 3.0.9+ only
# When you need remote video monitoring from the ssh shell execute 
# 'camera.py' to start the webserver
# It requires a compatible USB camera to be inserted in any of the USB slots
# From your browser navigate to: http://your_printer_address:8000
# Use CTRL-C or close the ssh shell to stop the webserver
webcam="default" [python] [fswebcam]

# Enable the web interface Kobra Unleashed
# More information: https://github.com/anjomro/kobra-unleashed
# Replace the URL below with the URL of your MQTT server
# You also need to transfer to the printer your keys in
# the /user folder by ssh as explained in the project page
# Always keep a copy of the original keys in case you want to go back to AC cloud
kobra_unleashed="localhost.mr-a.de"

# Patch the app to check the captive portal URLs less often (originally every 2s)
# It is used to detect if the internet connection is established and alive
# This patch will produce less unwanted web traffic if enabled
# Available settings are: 5s, 10s, 20s, 30s and 60s
app_net_ready="30s"

# Modify the hardcoded app DNS
# For parameter(s) provide "old_dns|new_dns"
# Available hardcoded DNS in the app:
# "8.8.8.8", "208.67.222.222", "114.114.114.114", "223.5.5.5"
# You can replace one, more or all of them
# Example: app_dns="208.67.222.222|4.4.4.4" "223.5.5.5|8.8.4.4"
#app_dns="223.5.5.5|8.8.4.4"

# Replace some of the app images
# Use it for one or more sets: app_images="set1" "set2" "set3"
#app_images="set1"

# Replace the boot logo
# Please do not use it until further investigation of the purpose of 
# the file 'magic.bin' to the UART availability during booting
#boot_resource="kangaroo"

# Add a script for custom initializations at startup
# like starting a custom MQTT server, webcam steaming, etc.
startup_script="startup.sh"
